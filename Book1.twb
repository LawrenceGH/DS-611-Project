<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20192.19.0917.1648                               -->
<workbook original-version='18.1' source-build='2019.2.4 (20192.19.0917.1648)' source-platform='mac' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <MapboxVectorStylesAndLayers />
    <SheetIdentifierTracking ignorable='true' predowngraded='true' />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='athlete_events_clean' inline='true' name='federated.0zugn2x0a14k0u17o6t6q1xwqemc' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='athlete_events_clean' name='textscan.0eqq3w90ls1pul155e8680vpci9u'>
            <connection class='textscan' directory='/Users/gogol/Documents/Utica/DSC-611-Z1/Module8/DS-611-Project/data' filename='athlete_events_clean.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.0eqq3w90ls1pul155e8680vpci9u' name='athlete_events_clean.csv' table='[athlete_events_clean#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='Sex' ordinal='0' />
            <column datatype='string' name='Age' ordinal='1' />
            <column datatype='string' name='Height' ordinal='2' />
            <column datatype='string' name='Weight' ordinal='3' />
            <column datatype='string' name='Team' ordinal='4' />
            <column datatype='integer' name='Year' ordinal='5' />
            <column datatype='string' name='Season' ordinal='6' />
            <column datatype='string' name='City' ordinal='7' />
            <column datatype='string' name='Sport' ordinal='8' />
            <column datatype='string' name='Medal' ordinal='9' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[athlete_events_clean.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sex</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Sex]</local-name>
            <parent-name>[athlete_events_clean.csv]</parent-name>
            <remote-alias>Sex</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Age</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Age]</local-name>
            <parent-name>[athlete_events_clean.csv]</parent-name>
            <remote-alias>Age</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Height</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Height]</local-name>
            <parent-name>[athlete_events_clean.csv]</parent-name>
            <remote-alias>Height</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Weight</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Weight]</local-name>
            <parent-name>[athlete_events_clean.csv]</parent-name>
            <remote-alias>Weight</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Team</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Team]</local-name>
            <parent-name>[athlete_events_clean.csv]</parent-name>
            <remote-alias>Team</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[athlete_events_clean.csv]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Season</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Season]</local-name>
            <parent-name>[athlete_events_clean.csv]</parent-name>
            <remote-alias>Season</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>City</remote-name>
            <remote-type>129</remote-type>
            <local-name>[City]</local-name>
            <parent-name>[athlete_events_clean.csv]</parent-name>
            <remote-alias>City</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sport</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Sport]</local-name>
            <parent-name>[athlete_events_clean.csv]</parent-name>
            <remote-alias>Sport</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Medal</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Medal]</local-name>
            <parent-name>[athlete_events_clean.csv]</parent-name>
            <remote-alias>Medal</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
        </metadata-records>
      </connection>
      <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
      <layout dim-ordering='alphabetic' dim-percentage='0.614089' measure-ordering='alphabetic' measure-percentage='0.385911' rowDisplayCount='1000' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='athlete_events_tableau' inline='true' name='federated.0zugn2x0a14k0u17o6t6q1xwqemc (copy)' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='athlete_events_clean' name='textscan.0eqq3w90ls1pul155e8680vpci9u (copy)'>
            <connection class='textscan' directory='/Users/gogol/Documents/Utica/DSC-611-Z1/Module8/DS-611-Project/data' filename='athlete_events_clean.csv' password='' server='' />
          </named-connection>
          <named-connection caption='country_data' name='textscan.0pe0t071hajpz40zn39o01qpfmyp'>
            <connection class='textscan' directory='/Users/gogol/Documents/Utica/DSC-611-Z1/Module8/DS-611-Project/data' filename='country_data.csv' password='' server='' />
          </named-connection>
          <named-connection caption='noc_regions' name='textscan.1a4mwi808j1otm1eg2u7g0xuudy0'>
            <connection class='textscan' directory='/Users/gogol/Documents/Utica/DSC-611-Z1/Module8/DS-611-Project/data' filename='noc_regions.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation join='inner' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='TRIM( SPLIT( [athlete_events_clean.csv].[Team], &quot;-&quot;, 1 ) )' />
              <expression op='[noc_regions.csv].[region]' />
            </expression>
          </clause>
          <relation connection='textscan.1a4mwi808j1otm1eg2u7g0xuudy0' name='athlete_events_clean.csv' table='[athlete_events_clean#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='string' name='Sex' ordinal='0' />
              <column datatype='string' name='Age' ordinal='1' />
              <column datatype='string' name='Height' ordinal='2' />
              <column datatype='string' name='Weight' ordinal='3' />
              <column datatype='string' name='Team' ordinal='4' />
              <column datatype='integer' name='Year' ordinal='5' />
              <column datatype='string' name='Season' ordinal='6' />
              <column datatype='string' name='City' ordinal='7' />
              <column datatype='string' name='Sport' ordinal='8' />
              <column datatype='string' name='Medal' ordinal='9' />
            </columns>
          </relation>
          <relation connection='textscan.1a4mwi808j1otm1eg2u7g0xuudy0' name='noc_regions.csv' table='[noc_regions#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='string' name='NOC' ordinal='0' />
              <column datatype='string' name='region' ordinal='1' />
              <column datatype='string' name='notes' ordinal='2' />
            </columns>
          </relation>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[athlete_events_clean.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sex</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Sex]</local-name>
            <parent-name>[athlete_events_clean.csv]</parent-name>
            <remote-alias>Sex</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Age</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Age]</local-name>
            <parent-name>[athlete_events_clean.csv]</parent-name>
            <remote-alias>Age</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Height</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Height]</local-name>
            <parent-name>[athlete_events_clean.csv]</parent-name>
            <remote-alias>Height</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Weight</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Weight]</local-name>
            <parent-name>[athlete_events_clean.csv]</parent-name>
            <remote-alias>Weight</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Team</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Team]</local-name>
            <parent-name>[athlete_events_clean.csv]</parent-name>
            <remote-alias>Team</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[athlete_events_clean.csv]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Season</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Season]</local-name>
            <parent-name>[athlete_events_clean.csv]</parent-name>
            <remote-alias>Season</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>City</remote-name>
            <remote-type>129</remote-type>
            <local-name>[City]</local-name>
            <parent-name>[athlete_events_clean.csv]</parent-name>
            <remote-alias>City</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sport</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Sport]</local-name>
            <parent-name>[athlete_events_clean.csv]</parent-name>
            <remote-alias>Sport</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Medal</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Medal]</local-name>
            <parent-name>[athlete_events_clean.csv]</parent-name>
            <remote-alias>Medal</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[noc_regions.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>NOC</remote-name>
            <remote-type>129</remote-type>
            <local-name>[NOC]</local-name>
            <parent-name>[noc_regions.csv]</parent-name>
            <remote-alias>NOC</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>region</remote-name>
            <remote-type>129</remote-type>
            <local-name>[region]</local-name>
            <parent-name>[noc_regions.csv]</parent-name>
            <remote-alias>region</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>notes</remote-name>
            <remote-type>129</remote-type>
            <local-name>[notes]</local-name>
            <parent-name>[noc_regions.csv]</parent-name>
            <remote-alias>notes</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Year2K' datatype='boolean' name='[Calculation_160440780639604747]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[Year] &gt;= 2000' />
      </column>
      <column caption='Age Group' datatype='string' name='[Calculation_77335292081729537]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF INT([Age]) &lt;= 18 THEN&#10;    &quot;School&quot;&#10;ELSEIF INT([Age]) &lt;= 22 THEN&#10;    &quot;Under Grad&quot;&#10;ELSE&#10;    &quot;Senior&quot;&#10;END' />
      </column>
      <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column aggregation='CountD' datatype='string' default-role='measure' default-type='quantitative' name='[Medal]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Number of Records]' role='dimension' semantic-role='[Country].[Name]' type='ordinal' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Sex' datatype='string' name='[Sex]' role='dimension' type='nominal' />
      <column caption='Country' datatype='string' name='[Team - Split 1]' role='dimension' semantic-role='[Country].[Name]' type='nominal' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.0zugn2x0a14k0u17o6t6q1xwqemc (copy)].[Team]'>
        <calculation class='tableau' formula='TRIM( SPLIT( [Team], &quot;-&quot;, 1 ) )' />
      </column>
      <column aggregation='CountD' datatype='string' default-role='measure' default-type='quantitative' name='[Team]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
      <column caption='Notes' datatype='string' name='[notes]' role='dimension' type='nominal' />
      <column caption='Region' datatype='string' name='[region]' role='dimension' type='nominal' />
      <column-instance column='[Team - Split 1]' derivation='Attribute' name='[attr:Team - Split 1:nk]' pivot='key' type='nominal' />
      <column-instance column='[Team - Split 1]' derivation='None' name='[none:Team - Split 1:nk]' pivot='key' type='nominal' />
      <extract count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='/Users/gogol/Documents/Utica/DSC-611-Z1/Module8/DS-611-Project/data/athlete_events_tableau.hyper' default-settings='yes' schema='Extract' sslmode='' tablename='Extract' update-time='10/13/2019 09:32:28 PM' username='tableau_internal_user'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <refresh>
            <refresh-event add-from-file-path='athlete_events_tableau' increment-value='%null%' refresh-type='create' rows-inserted='284724' timestamp-start='2019-10-13 21:32:28.804' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Sex</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Sex]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Sex</remote-alias>
              <ordinal>0</ordinal>
              <family>athlete_events_clean.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Age</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Age]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Age</remote-alias>
              <ordinal>1</ordinal>
              <family>athlete_events_clean.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>106</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Height</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Height]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Height</remote-alias>
              <ordinal>2</ordinal>
              <family>athlete_events_clean.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>159</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Weight</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Weight]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Weight</remote-alias>
              <ordinal>3</ordinal>
              <family>athlete_events_clean.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>320</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Team</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Team]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Team</remote-alias>
              <ordinal>4</ordinal>
              <family>athlete_events_clean.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>594</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Year</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Year]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Year</remote-alias>
              <ordinal>5</ordinal>
              <family>athlete_events_clean.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>35</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Season</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Season]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Season</remote-alias>
              <ordinal>6</ordinal>
              <family>athlete_events_clean.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>City</remote-name>
              <remote-type>129</remote-type>
              <local-name>[City]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>City</remote-alias>
              <ordinal>7</ordinal>
              <family>athlete_events_clean.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>42</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Sport</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Sport]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Sport</remote-alias>
              <ordinal>8</ordinal>
              <family>athlete_events_clean.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>98</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Medal</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Medal]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Medal</remote-alias>
              <ordinal>9</ordinal>
              <family>athlete_events_clean.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>NOC</remote-name>
              <remote-type>129</remote-type>
              <local-name>[NOC]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>NOC</remote-alias>
              <ordinal>10</ordinal>
              <family>noc_regions.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>507</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>region</remote-name>
              <remote-type>129</remote-type>
              <local-name>[region]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>region</remote-alias>
              <ordinal>11</ordinal>
              <family>noc_regions.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>462</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>notes</remote-name>
              <remote-type>129</remote-type>
              <local-name>[notes]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>notes</remote-alias>
              <ordinal>12</ordinal>
              <family>noc_regions.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>24</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.641481' measure-ordering='alphabetic' measure-percentage='0.358519' rowDisplayCount='1000' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[attr:Team - Split 1:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Cook Islands&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Marshall Islands&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Cape Verde&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Aruba&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Turkmenistan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Czech Republic&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Palau&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Tonga&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;San Marino&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cayman Islands&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Puerto Rico&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Swaziland&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Tuvalu&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Guam&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Kiribati&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Nauru&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;American Samoa&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Team - Split 1:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Cook Islands&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Individual Olympic Athletes&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Marshall Islands&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Cape Verde&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Aruba&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Turkmenistan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Czech Republic&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Palau&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Tonga&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;San Marino&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Macedonia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cayman Islands&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Puerto Rico&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;North Korea&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Swaziland&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Palestine&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Tuvalu&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Guam&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Kiribati&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Brunei&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Nauru&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;American Samoa&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <field-sort-info field-sort-order-type='custom-order'>
        <field-sort-custom-order field='Sex' />
        <field-sort-custom-order field='Age' />
        <field-sort-custom-order field='Calculation_77335292081729537' />
        <field-sort-custom-order field='Height' />
        <field-sort-custom-order field='Weight' />
        <field-sort-custom-order field='Team' />
        <field-sort-custom-order field='Team - Split 1' />
        <field-sort-custom-order field='Year' />
        <field-sort-custom-order field='Calculation_160440780639604747' />
        <field-sort-custom-order field='Season' />
        <field-sort-custom-order field='City' />
        <field-sort-custom-order field='Sport' />
        <field-sort-custom-order field='Medal' />
        <field-sort-custom-order field='NOC' />
        <field-sort-custom-order field='region' />
        <field-sort-custom-order field='notes' />
      </field-sort-info>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Sheet 1'>
      <table>
        <view>
          <datasources>
            <datasource caption='athlete_events_tableau' name='federated.0zugn2x0a14k0u17o6t6q1xwqemc (copy)' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0zugn2x0a14k0u17o6t6q1xwqemc (copy)' />
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0zugn2x0a14k0u17o6t6q1xwqemc (copy)].[Longitude (generated)]' field-type='quantitative' max='23129496.752273031' min='-21393691.349170595' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0zugn2x0a14k0u17o6t6q1xwqemc (copy)].[Latitude (generated)]' field-type='quantitative' max='16114757.249970917' min='-17189594.382305078' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <style>
              <style-rule element='mark'>
                <format attr='shape' value=':filled/asterisk' />
                <format attr='size' value='0.40580111742019653' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0zugn2x0a14k0u17o6t6q1xwqemc (copy)].[Latitude (generated)]</rows>
        <cols>[federated.0zugn2x0a14k0u17o6t6q1xwqemc (copy)].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{1AAC349B-4312-4AC7-A07F-38FD9D4F611D}' />
    </worksheet>
    <worksheet name='Sheet 2'>
      <table>
        <view>
          <datasources>
            <datasource caption='athlete_events_tableau' name='federated.0zugn2x0a14k0u17o6t6q1xwqemc (copy)' />
          </datasources>
          <datasource-dependencies datasource='federated.0zugn2x0a14k0u17o6t6q1xwqemc (copy)'>
            <column aggregation='CountD' datatype='string' default-role='measure' default-type='quantitative' name='[Medal]' role='dimension' type='nominal' />
            <column datatype='string' name='[Season]' role='dimension' type='nominal' />
            <column caption='Sex' datatype='string' name='[Sex]' role='dimension' type='nominal' />
            <column caption='Country' datatype='string' name='[Team - Split 1]' role='dimension' semantic-role='[Country].[Name]' type='nominal' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.0zugn2x0a14k0u17o6t6q1xwqemc (copy)].[Team]'>
              <calculation class='tableau' formula='TRIM( SPLIT( [Team], &quot;-&quot;, 1 ) )' />
            </column>
            <column aggregation='CountD' datatype='string' default-role='measure' default-type='quantitative' name='[Team]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Medal]' derivation='Count' name='[cnt:Medal:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Season]' derivation='None' name='[none:Season:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sex]' derivation='None' name='[none:Sex:nk]' pivot='key' type='nominal' />
            <column-instance column='[Team - Split 1]' derivation='None' name='[none:Team - Split 1:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0zugn2x0a14k0u17o6t6q1xwqemc (copy)].[none:Season:nk]'>
            <groupfilter function='level-members' level='[none:Season:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <computed-sort column='[federated.0zugn2x0a14k0u17o6t6q1xwqemc (copy)].[none:Team - Split 1:nk]' direction='ASC' using='[federated.0zugn2x0a14k0u17o6t6q1xwqemc (copy)].[cnt:Medal:qk]' />
          <filter class='quantitative' column='[federated.0zugn2x0a14k0u17o6t6q1xwqemc (copy)].[none:Year:qk]' included-values='in-range'>
            <min>2000</min>
            <max>2016</max>
          </filter>
          <slices>
            <column>[federated.0zugn2x0a14k0u17o6t6q1xwqemc (copy)].[none:Season:nk]</column>
            <column>[federated.0zugn2x0a14k0u17o6t6q1xwqemc (copy)].[none:Year:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0zugn2x0a14k0u17o6t6q1xwqemc (copy)].[none:Team - Split 1:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0zugn2x0a14k0u17o6t6q1xwqemc (copy)].[cnt:Medal:qk]</rows>
        <cols>[federated.0zugn2x0a14k0u17o6t6q1xwqemc (copy)].[none:Sex:nk]</cols>
      </table>
      <simple-id uuid='{17BFC1D2-1365-408E-B8F8-BF1A6ADB881D}' />
    </worksheet>
    <worksheet name='Sheet 3'>
      <table>
        <view>
          <datasources />
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.31784531474113464' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{0CF87B22-80E0-4A64-A4D0-E3D79F645C7F}' />
    </worksheet>
  </worksheets>
  <windows source-height='51'>
    <window class='worksheet' name='Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0zugn2x0a14k0u17o6t6q1xwqemc (copy)].[cnt:Calculation_77335292081729537:qk]</field>
            <field>[federated.0zugn2x0a14k0u17o6t6q1xwqemc (copy)].[cnt:Medal:qk]</field>
            <field>[federated.0zugn2x0a14k0u17o6t6q1xwqemc (copy)].[none:Number of Records:ok]</field>
            <field>[federated.0zugn2x0a14k0u17o6t6q1xwqemc (copy)].[none:Team - Split 1:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{97BD5BE9-7C9F-4CE6-8DC4-56811F55C529}' />
    </window>
    <window class='worksheet' maximized='true' name='Sheet 2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0zugn2x0a14k0u17o6t6q1xwqemc (copy)].[none:Season:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0zugn2x0a14k0u17o6t6q1xwqemc (copy)].[none:Medal:nk]</field>
            <field>[federated.0zugn2x0a14k0u17o6t6q1xwqemc (copy)].[none:Season:nk]</field>
            <field>[federated.0zugn2x0a14k0u17o6t6q1xwqemc (copy)].[none:Sex:nk]</field>
            <field>[federated.0zugn2x0a14k0u17o6t6q1xwqemc (copy)].[none:Team - Split 1:nk]</field>
            <field>[federated.0zugn2x0a14k0u17o6t6q1xwqemc (copy)].[none:Team:nk]</field>
            <field>[federated.0zugn2x0a14k0u17o6t6q1xwqemc (copy)].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{EA58BD05-8DD6-4481-835D-8422BDE0560E}' />
    </window>
    <window class='worksheet' name='Sheet 3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0zugn2x0a14k0u17o6t6q1xwqemc (copy)].[none:Calculation_77335292081729537:nk]</field>
            <field>[federated.0zugn2x0a14k0u17o6t6q1xwqemc (copy)].[none:Season:nk]</field>
            <field>[federated.0zugn2x0a14k0u17o6t6q1xwqemc (copy)].[none:Team - Split 1:nk]</field>
            <field>[federated.0zugn2x0a14k0u17o6t6q1xwqemc (copy)].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{5503AB93-7D51-4AB1-94DA-DDC42C436815}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='384' name='Sheet 1' width='384'>
      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
      gg==
    </thumbnail>
    <thumbnail height='384' name='Sheet 2' width='366'>
      iVBORw0KGgoAAAANSUhEUgAAAW4AAAGACAYAAACN7Ih9AAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO3df1BV953/8dcFLshPjVBFkKCgVFJiYoKiqQqSGiftpKwxjVa+qbGa6n6z
      2elmpzEm3zSzmTW25ofpTpOsP/iOjaFJdploGmW1bvyuP4gaJagRoxBSREW4KuBFLhLg3u8f
      DjQUuNwL6PUDz8dMZrzncz6H9zHDi7fnfM7B4nK5XAIAGMPP1wUAALxDcAOAYQhuADAMwQ0A
      hiG4AcAwBDcAGIbgBgDDENwAYBiCGwAMQ3ADgGEIbgAwDMENAIYhuAHAMAQ3ABiG4AYAwxDc
      AGAYghsADENwA4BhCG4AMAzBDQCGIbgBwDAENwAYhuAGAMMQ3ABgGIIbAAxDcAOAYQhuADBM
      gK8LAOA9m82mwsJCnT17VjU1NRoxYoRiY2OVmpqqyMhIX5eHG4zgBgzyzTff6N///d/1/vvv
      65tvvuk07u/vr+9///t66qmnNHbsWB9UiJuBSyWAQdasWaN33nmnPbT9/PwUFhbWPt7a2qq9
      e/fqiy++8FWJuAnouAFDHD9+XFu3bpUkxcfHa9myZUpLS9PQoUNlt9t18uRJvffee/r00099
      XCluNIIbMERRUVH7n1etWqUJEya0f46IiNDUqVM1depUff31126P09DQoNOnT+u2227TmDFj
      ZLFYbljNuDEIbsAQNput/c8RERHd7peQkNDl9uLiYq1atUqlpaVyuVySpLCwMP3d3/2d/vEf
      /1F+fn+9cvrMM8/oq6++kiS98MILmjRpUodjPf/88/ryyy/l7++vDRs2aNiwYb0+L3iPa9yA
      IcaMGdP+59dee02NjY0ez925c6eWLl2qkpISuVyu9pC+evWq3n33Xf3TP/1Te5hL0uOPP67z
      58+roqJCL730kpqamtrHtmzZop07d6qiokKzZ88mtH2A4AYMcd9992nIkCGSpD179igrK0vr
      169XRUWF23kNDQ1as2aNmpubNWzYMP3bv/2bCgoKtH37dk2fPl2SVFBQoL1797bPueOOO7R4
      8WJJ0tmzZ/Xmm29KkiorK7V27VpJUkpKipYsWdLv54meWVzf/jEL4Jb2pz/9SS+//LJaWlo6
      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
    </thumbnail>
    <thumbnail height='384' name='Sheet 3' width='384'>
      iVBORw0KGgoAAAANSUhEUgAAAYAAAAGACAYAAACkx7W/AAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAFXUlEQVR4nO3VMQEAIAzAMMC/5yFjRxMF/XpnZg4AOW87AIAdBgAQZQAAUQYAEGUAAFEG
      ABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAA
      UQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBl
      AABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYA
      EGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABR
      BgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUA
      AFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQ
      ZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEG
      ABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAA
      UQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBl
      AABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYA
      EGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABR
      BgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUA
      AFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQ
      ZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEG
      ABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAA
      UQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBl
      AABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYA
      EGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABR
      BgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUA
      AFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQ
      ZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEG
      ABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAA
      UQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBl
      AABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYA
      EGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEfFxoG/IiMv0YAAAAASUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
